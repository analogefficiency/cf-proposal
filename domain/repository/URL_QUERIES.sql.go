// Code generated by sqlc. DO NOT EDIT.
// source: URL_QUERIES.sql

package repository

import (
	"context"
	"database/sql"
)

const createUrl = `-- name: CreateUrl :one
INSERT INTO URL (long_url, short_url, expiration_dt)
VALUES($1, $2, $3) RETURNING url_id, long_url, short_url, expiration_dt
`

type CreateUrlParams struct {
	LongUrl      string        `json:"long_url"`
	ShortUrl     string        `json:"short_url"`
	ExpirationDt sql.NullInt32 `json:"expiration_dt"`
}

func (q *Queries) CreateUrl(ctx context.Context, arg CreateUrlParams) (Url, error) {
	row := q.db.QueryRowContext(ctx, createUrl, arg.LongUrl, arg.ShortUrl, arg.ExpirationDt)
	var i Url
	err := row.Scan(
		&i.UrlID,
		&i.LongUrl,
		&i.ShortUrl,
		&i.ExpirationDt,
	)
	return i, err
}

const findRedirectByShortUrl = `-- name: FindRedirectByShortUrl :one
SELECT url_id, long_url FROM URL
WHERE short_url = $1
`

type FindRedirectByShortUrlRow struct {
	UrlID   int32  `json:"url_id"`
	LongUrl string `json:"long_url"`
}

func (q *Queries) FindRedirectByShortUrl(ctx context.Context, shortUrl string) (FindRedirectByShortUrlRow, error) {
	row := q.db.QueryRowContext(ctx, findRedirectByShortUrl, shortUrl)
	var i FindRedirectByShortUrlRow
	err := row.Scan(&i.UrlID, &i.LongUrl)
	return i, err
}
